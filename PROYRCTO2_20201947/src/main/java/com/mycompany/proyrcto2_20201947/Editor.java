/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyrcto2_20201947;

import Handlers.BMPtoJPEGImage;
import Handlers.BmpHandlerCopy;
import Handlers.JPEGHandler;
import Handlers.JPEGImageHandlerBN;
import Handlers.JPEGImageHandlerColors;
import Handlers.JPEGImageHandlerRotator;
import Handlers.JPEGtoBMPImage;
import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.commons.io.FilenameUtils;

/**
 *
 * @author Pablo Rodriguez
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form Editor
     */
    public Editor() {
        initComponents();
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setBackground(Color.DARK_GRAY);
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("MENU EDITOR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        direccion = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        modificarimagen = new javax.swing.JCheckBox();
        jpegtobmp = new javax.swing.JCheckBox();
        copiajpeg = new javax.swing.JCheckBox();
        blancoynegro = new javax.swing.JCheckBox();
        rgbysepia = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SELC. IMG");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        direccion.setForeground(new java.awt.Color(255, 255, 255));
        direccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jButton2.setBackground(new java.awt.Color(0, 153, 153));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("EJECUTAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 153, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("REGRESAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        modificarimagen.setBackground(java.awt.Color.darkGray);
        modificarimagen.setForeground(new java.awt.Color(255, 255, 255));
        modificarimagen.setText("MODIFICAR IMAGEN");
        modificarimagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarimagenActionPerformed(evt);
            }
        });

        jpegtobmp.setBackground(java.awt.Color.darkGray);
        jpegtobmp.setForeground(new java.awt.Color(255, 255, 255));
        jpegtobmp.setText("JPEG A BMP (y viceversa)");
        jpegtobmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpegtobmpActionPerformed(evt);
            }
        });

        copiajpeg.setBackground(java.awt.Color.darkGray);
        copiajpeg.setForeground(new java.awt.Color(255, 255, 255));
        copiajpeg.setText("COPIA JPEG");

        blancoynegro.setBackground(java.awt.Color.darkGray);
        blancoynegro.setForeground(new java.awt.Color(255, 255, 255));
        blancoynegro.setText("BLANCO Y NEGRO");

        rgbysepia.setBackground(java.awt.Color.darkGray);
        rgbysepia.setForeground(new java.awt.Color(255, 255, 255));
        rgbysepia.setText("R,G,B Y SEPIA");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 415, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpegtobmp)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(modificarimagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(copiajpeg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rgbysepia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(blancoynegro, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(159, 159, 159))))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(direccion, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpegtobmp)
                .addGap(12, 12, 12)
                .addComponent(copiajpeg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rgbysepia)
                .addGap(12, 12, 12)
                .addComponent(modificarimagen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blancoynegro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        FileFilter filtro1 = new FileNameExtensionFilter("Archivos JPEG", "jpg");
        FileFilter filtro2 = new FileNameExtensionFilter("Archivos BMP", "bmp"); 
        jf.setFileFilter(filtro2);
        jf.setFileFilter(filtro1);
        jf.showOpenDialog(this);
        File archivo=jf.getSelectedFile();
        if (archivo!=null){
            direccion.setText(archivo.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(direccion.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ha seleccionado imagen");
            
        }else if(blancoynegro.isSelected()==false&&copiajpeg.isSelected()==false&&jpegtobmp.isSelected()==false&&rgbysepia.isSelected()==false&&modificarimagen.isSelected()==false){
            JOptionPane.showMessageDialog(null, "Seleccione los filtros que decea aplicar");
        }else{
            if(jpegtobmp.isSelected()==true){
                File archivo = new File(direccion.getText());
                String fileName=archivo.getName();
                String extension = FilenameUtils.getExtension(fileName);
                if(extension.equals("jpg")){
                    JPEGtoBMPImage JPGtoBMP = new JPEGtoBMPImage(direccion.getText());
                    try{
                        JPEGHandler.runHandler(JPGtoBMP);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    JOptionPane.showMessageDialog(null, "Filtro JPG a BMP Aplicado"); 
                }else if(extension.equals("bmp")){
                    BMPtoJPEGImage BMPtoJPG = new BMPtoJPEGImage(direccion.getText());
                    try{
                        JPEGHandler.runHandler(BMPtoJPG);
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                    JOptionPane.showMessageDialog(null, "Filtro BMP a JPG Aplicado ");  
                } 
            }
            if(copiajpeg.isSelected()==true){
                BmpHandlerCopy HanderCopiaJPG = new BmpHandlerCopy(direccion.getText());
                try{
                    JPEGHandler.runHandler(HanderCopiaJPG);
                }catch(Exception e){
                    e.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Filtro Copia Aplicado");
            }
            if(rgbysepia.isSelected()==true){
                JPEGImageHandlerColors HanderColors = new JPEGImageHandlerColors(direccion.getText());
                try{
                    JPEGHandler.runHandler(HanderColors);
                }catch(Exception e){
                    e.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Filtro Colores Aplicado");  
            }if(modificarimagen.isSelected()==true){
                JPEGImageHandlerRotator RotarImaen = new JPEGImageHandlerRotator(direccion.getText());
                try{
                    JPEGHandler.runHandler( RotarImaen);
                }catch(Exception e){
                    e.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Filtro Rotar Aplicado "); 
            }
            if(blancoynegro.isSelected()==true){
                JPEGImageHandlerBN HanderBN = new JPEGImageHandlerBN(direccion.getText());
                try{
                    JPEGHandler.runHandler(HanderBN);
                }catch(Exception e){
                    e.printStackTrace();
                }
                JOptionPane.showMessageDialog(null, "Filtro Blanco Y Negro Aplicado "); 
            }
              
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        UsuarioJFrame usuario = new UsuarioJFrame();
        usuario.setVisible(true);
        dispose();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void modificarimagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarimagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modificarimagenActionPerformed

    private void jpegtobmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpegtobmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jpegtobmpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox blancoynegro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox copiajpeg;
    private javax.swing.JLabel direccion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jpegtobmp;
    private javax.swing.JCheckBox modificarimagen;
    private javax.swing.JCheckBox rgbysepia;
    // End of variables declaration//GEN-END:variables
}
